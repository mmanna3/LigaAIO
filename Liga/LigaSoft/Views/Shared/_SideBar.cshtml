<nav class="navbar navbar-inverse sidebar" role="navigation">
	<div class="container-fluid">

		<div class="navbar-header">
			<button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-sidebar-navbar-collapse-1">
				<span class="sr-only">Toggle navigation</span>
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
			</button>
		</div>

		<div class="collapse navbar-collapse" id="bs-sidebar-navbar-collapse-1">
			<ul class="nav navbar-nav">
				@if (User.IsInRole(LigaSoft.Utilidades.Roles.Administrador))
				{
					<li class="dropdown">
						@MenuDesplegable("Torneos", "fa-trophy")
						<ul class="dropdown-menu forAnimate" role="menu">
							<li><a href="/Torneo">Torneos</a></li>
							<li><a href="/TorneoTipo">Tipos</a></li>
						</ul>
					</li>
				}
				@if (User.IsInRole(LigaSoft.Utilidades.Roles.Administrador) || User.IsInRole(LigaSoft.Utilidades.Roles.SoloPuedeFichar))
				{
					<li class="dropdown">
						@MenuDesplegable("Clubes", "fa-volleyball-ball")
						<ul class="dropdown-menu forAnimate" role="menu">
							@if (User.IsInRole(LigaSoft.Utilidades.Roles.Administrador))
							{
								<li><a href="/Club">Clubes</a></li>
							}
							@if (User.IsInRole(LigaSoft.Utilidades.Roles.Administrador) || User.IsInRole(LigaSoft.Utilidades.Roles.SoloPuedeFichar))
							{
								<li><a href="/Equipo">Equipos</a></li>
							}
						</ul>
					</li>
				}
				@if (User.IsInRole(LigaSoft.Utilidades.Roles.Administrador) || User.IsInRole(LigaSoft.Utilidades.Roles.SoloPuedeFichar))
				{
					<li class="dropdown">
						@MenuDesplegable("Jugadores", "fa-user")
						<ul class="dropdown-menu forAnimate" role="menu">
							<li><a href="/Jugador">Fichados</a></li>
							<li><a href="/AdministracionJugadoresAutofichados/Index?Estado=1">Pendientes</a></li>
						</ul>
					</li>
				}
				@if (User.IsInRole(LigaSoft.Utilidades.Roles.Administrador))
				{
					<li class="dropdown">
						@MenuDesplegable("Finanzas", "fa-briefcase")
						<ul class="dropdown-menu forAnimate" role="menu">
							<li><a href="/ConceptoInsumo/Index">Insumos</a></li>
							<li><a href="/MovimientoEntradaSinClub/Index">Ingresos</a></li>
							<li><a href="/MovimientoSalida/Index")">Egresos</a></li>
						</ul>
					</li>
					<li class="dropdown">
						@MenuDesplegable("Informes", "fa-file")
						<ul class="dropdown-menu forAnimate" role="menu">
							<li><a href="/Informe/Balance_SeleccionFecha">Balance</a></li>
							<li><a href="/Informe/MovimientosImpagos_Informe">Movimientos impagos</a></li>
							<li><a href="/Informe/PagoCuotasPorMes_Informe">Pago mensual de cuotas</a></li>
						</ul>
					</li>
					@MenuLink("Noticias", "Index", "Noticia", null, "fa-newspaper")
					@MenuLink("Publicidades", "Index", "Publicidad", null, "fa-credit-card")
					<li class="dropdown">
						@MenuDesplegable("Delegados", "fa-users")
						<ul class="dropdown-menu forAnimate" role="menu">
							<li><a href="@Url.Action("DelegadosPendientesDeAprobacion","AdministracionDelegados")">Delegados pendientes</a></li>
							<li><a href="@Url.Action("DelegadosAprobados","AdministracionDelegados")">Delegados Aprobados</a></li>
							<li><a href="@Url.Action("JugadoresPendientesDeAprobacion","AdministracionJugadoresFichadosPorDelegados")">Jugadores pendientes</a></li>
						</ul>
					</li>
					@MenuLink("Configuración", "Edit", "ParametroGlobal", new { Id = 1 }, "fa-cog")
				}
				@if (User.IsInRole(LigaSoft.Utilidades.Roles.Delegado))
				{
					@MenuLink("Jugadores pendientes", "SeleccionarEquipo", "JugadorFichadoPorDelegado", new { alSeleccionarIrAAction = "PendientesDeAprobacion" }, "fa-user")
					@MenuLink("Jugadores rechazados", "SeleccionarEquipo", "JugadorFichadoPorDelegado", new { alSeleccionarIrAAction = "Rechazados" }, "fa-user-times")
					@MenuLink("Jugadores aprobados", "SeleccionarEquipo", "JugadorFichadoPorDelegado", new { alSeleccionarIrAAction = "Aprobados" }, "fa-user-times")
				}
			</ul>
		</div>
	</div>
</nav>

@helper MenuLink(string text, string action, string controller, object parameters, string fontAwesomeStandard)
{
	<li><a tabindex="-1" href="@Url.Action(action, controller, parameters)">@text<span style="font-size:16px;" class="pull-right hidden-xs fas @fontAwesomeStandard"></span></a></li>
}

@helper MenuDesplegable(string text, string fontAwesomeStandard)
{
	<a tabindex="-1" href="#" class="dropdown-toggle" data-toggle="dropdown">@text<span class="caret"></span><span style="font-size:16px;" class="pull-right hidden-xs fas @fontAwesomeStandard"></span></a>
}

<script>
	function htmlbodyHeightUpdate() {
		var height3 = $(window).height();
		var height1 = $('.nav').height() + 50;
		height2 = $('.main').height();
		if (height2 > height3) {
			$('html').height(Math.max(height1, height3, height2) + 10);
			$('body').height(Math.max(height1, height3, height2) + 10);
		}
		else {
			$('html').height(Math.max(height1, height3, height2));
			$('body').height(Math.max(height1, height3, height2));
		}

	}
	$(document).ready(function () {
		htmlbodyHeightUpdate();
		$(window).resize(function () {
			htmlbodyHeightUpdate();
		});
		$(window).scroll(function () {
			height2 = $('.main').height();
			htmlbodyHeightUpdate();
		});
	});
</script>