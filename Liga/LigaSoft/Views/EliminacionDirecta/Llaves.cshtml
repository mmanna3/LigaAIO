@using LigaSoft.ExtensionMethods
@using LigaSoft.Models.Enums
@model LigaSoft.Models.ViewModels.EliminacionDirectaVM
@section Titulo{
	Llave de eliminación directa
}

@section Subtitulo{
	@Model.Torneo - Tipo de llave: @Model.TipoDeLlave
}

@section CabeceraGrilla{
	@(Html.YKN().Button("MostrarOcultar")
				  .Label("Mostrar/Ocultar en web pública")
				  .PullLeft()
				  .Color(BootstrapColorEnum.Primary)
				  .OnClick("mostrarOcultar()"))

	<div style="margin-top: 5px;">
		Visible en web pública: @Model.LlaveEliminacionDirectaPublicada
	</div>
}

@using (Html.YKN().Form(FormSizeEnum.VeryBig))
{
	@Html.YKNNonTyped().ValidationSummary()

	@Html.HiddenFor(x => x.TorneoId)

	<div class="row">
		@(Html.YKN().Button("MostrarOcultarEquipos")
				.Label("Ver equipos disponibles")				
				.PullLeft()
				.Color(BootstrapColorEnum.Primary)
				.OnClick("mostrarOcultarEquipos()"))
	</div>
	<div class="row" id="equipos-disponibles" style="display: none">
		<div style="display: grid; grid-auto-flow: column;">
			@foreach (var item in Model.EquiposPorTorneo)
			{
				<div style="width: 200px;">
					<div style="font-weight: bold">@item.Torneo</div>
					@foreach (var equipo in item.Equipos)
					{
						<div>@equipo</div>
					}
				</div>
			}
		</div>
	</div>

	for (int c = 0; c < Model.PartidosPorCategoria.Count; c++)
	{
		@Html.HiddenFor(x => x.PartidosPorCategoria[c].CategoriaId)
		@Html.HiddenFor(x => x.PartidosPorCategoria[c].Categoria)

		<div style="margin-top: 20px; font-weight: bold; font-size: 16px;"> Categoría: @(Model.PartidosPorCategoria[c].Categoria) </div>
		var fase = Model.TipoDeLlave;
		<div class="contenedor-categoria">
			@for (int i = 0; i < Model.PartidosPorCategoria[c].PartidosEliminacionDirecta.Count; i++)
			{


				@Html.HiddenFor(x => x.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].Fase)
				@Html.HiddenFor(x => x.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].Orden)

				if (Model.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].Orden == 0)
				{
					fase = Model.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].Fase;
					@Html.Raw("<div class='columna-fase'>")
					<p class="fase"> @(fase)</p>
				}

				<div class="contenedor-partido">

					<div class="contenedor-equipo-resultado">
						<div class="contenedor-equipo">
							@(Html.YKN()
												.Autocomplete($"{c}{i}Local")
												.JsonSource(Model.Equipos)
												.Default(
													new LigaSoft.Models.ViewModels.IdDescripcionVM
													{
														Id = Model.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].LocalId ?? 0,
														Descripcion = Model.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].Local
													})
												.HiddenId($"PartidosPorCategoria[{c}].PartidosEliminacionDirecta[{i}].LocalId")
												)
						</div>
						@(Html.YKN()
											.EditorFor(x => x.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].GolesLocal)
											.Classes("goles")
											.NoLabel()
											)
						<p class="parentesis-penales">(</p>
						@(Html.YKN()
											.EditorFor(x => x.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].PenalesLocal)
											.Classes("goles")
											.NoLabel()
										)
						<p class="parentesis-penales">)</p>
					</div>
					<div class="contenedor-equipo-resultado">
						<div class="contenedor-equipo">
							@(Html.YKN()
											.Autocomplete($"{c}{i}Visitante")
											.JsonSource(Model.Equipos)
											.Default(
												new LigaSoft.Models.ViewModels.IdDescripcionVM
												{
													Id = Model.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].VisitanteId ?? 0,
													Descripcion = Model.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].Visitante
												})
											.HiddenId($"PartidosPorCategoria[{c}].PartidosEliminacionDirecta[{i}].VisitanteId")
										)
						</div>
						@(Html.YKN()
											.EditorFor(x => x.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].GolesVisitante)
											//.EditorFor(x => x.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].VisitanteId)
											.Classes("goles")
											.NoLabel()
										)
						<p class="parentesis-penales">(</p>
						@(Html.YKN()
											.EditorFor(x => x.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].PenalesVisitante)
											.Classes("goles")
											.NoLabel()
										)
						<p class="parentesis-penales">)</p>
					</div>

				</div>

				if (Model.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].Orden == ((int)Model.PartidosPorCategoria[c].PartidosEliminacionDirecta[i].Fase) / 2 - 1)
				{
					@Html.Raw("</div>")
				}


			}
		</div>
	}

	<div class="row fila-eliminar">
		<div class="col-sm-3">
			@(Html.YKN().Button("Eliminar llave")
				.FullWidth()
				.Color(BootstrapColorEnum.Warning)
				.OnClick("MostrarConfirmacionDeEliminacion()"))
		</div>
		<div class="col-sm-offset-3 col-sm-3">
			@(Html.YKN().Button("Volver")
			  .Color(BootstrapColorEnum.Danger)
			  .FullWidth()
			  .OnClickRedirect("Index", "Torneo"))
		</div>
		<div class="col-sm-3">
			@(Html.YKN().Button("Guardar")
			  .Color(BootstrapColorEnum.Success)
			  .FullWidth()
			  .Submit())
		</div>
	</div>
	<div class="row fila-eliminar">
		<div class="col-sm-7" style="display: none" id="eliminar-confirmacion">
			Escribir LLAVE para eliminar <input type="text" id="palabra-de-seguridad" />
			@Html.YKN().Button("Confirmar eliminación de la llave").Color(BootstrapColorEnum.Danger).OnClick("Eliminar()")
		</div>
	</div>
}

<style>
	input::-webkit-outer-spin-button,
	input::-webkit-inner-spin-button {
		-webkit-appearance: none;
		margin: 0;
	}

	/* Firefox */
	input[type=number] {
		-moz-appearance: textfield;
	}

	.contenedor-equipo {
		width: 200px;
	}

	.goles {
		width: 44px;
	}

	.parentesis-penales {
		margin-left: 2px;
		margin-right: 2px;
		margin-top: 4px;
	}

	.contenedor-equipo-resultado {
		display: flex;
	}

	.columna-fase {
		/*display: flex;*/
	}

	.contenedor-categoria {
		margin-top: 20px;
		display: grid;
		grid-auto-flow: column;
		align-items: center;
	}

	.fase {
		margin-left: 120px;
		font-weight: bold;
	}

	.fila-eliminar {
		margin-left: -16px !important;
		margin-top: 10px !important;
		margin-bottom: 10px !important;
	}
</style>

<script>
	function mostrarOcultarEquipos(obj) {
		if ($('div#equipos-disponibles').is(":visible")) {
			$('div#equipos-disponibles').hide();
		} else {
			$('div#equipos-disponibles').show();
		}		
	}

	function MostrarConfirmacionDeEliminacion(obj) {
		$('div#eliminar-confirmacion').show();
	}

	function mostrarOcultar() {
		console.log('aaa')
		$.ajax({
			url: '/EliminacionDirecta/MostrarOcultarEnWebPublica',
			type: "POST",
			data: { id: document.getElementById("TorneoId").value },
			success: function () {
				window.location.reload(false);
			}
		});
	}

	function Eliminar(obj) {
		$.ajax({
			url: '/EliminacionDirecta/Eliminar',
			type: "POST",
			data: { torneoId: document.getElementById("TorneoId").value, palabraDeSeguridad: document.getElementById("palabra-de-seguridad").value },
			success: function () {
				window.location.reload(false);
			}
		});
	}
</script>
